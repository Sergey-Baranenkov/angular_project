import { Injectable } from '@angular/core';
import {BehaviorSubject, Observable} from "rxjs";
import IProduct from "../interfaces/IProduct";

function getMock() {
  return [
    {
      name: '–Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥',
      description: '–û—á–µ–Ω—å –≤–∫—É—Å–Ω–æ',
      ingredients: [
        {name: '–Ø–±–ª–æ–∫–æ', logo: 'üçé'},
        {name: '–¢–µ—Å—Ç–æ', logo: 'ü•ü'},
        {name: '–°–∞—Ö–∞—Ä', logo: 'üç¨'}
      ]
    },
    {
      name: '–ù–∞—Ç—Å —Å —Ö–ª–µ–±–æ–º',
      description: '–î–ª—è –∂–∏—Ç–µ–ª–µ–π –í–∏–Ω–Ω–∏—Ü—ã —Å–∫–∏–¥–∫–∞ 15%',
      ingredients: [
        {name: '–ù–∞—Ç—Å', logo: 'ü•ú'},
        {name: '–•–ª–µ–±', logo: 'üçû'}
      ]
    },
    {
      name: '–ü–∏—Ä–æ–≥ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π',
      description: '–ß—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫—É—Å–Ω–µ–µ?',
      ingredients: [
        {name: '–¢–µ—Å—Ç–æ', logo: 'ü•ü'},
        {name: '–ö–∞—Ä—Ç–æ—à–∫–∞', logo: 'ü•î'}
      ]
    }
  ] as IProduct[]
}

@Injectable({
  providedIn: 'root'
})
export class ProductStoreService {
  private _products: BehaviorSubject<IProduct[]> = new BehaviorSubject([] as IProduct[]);
  public readonly products: Observable<IProduct[]> = this._products.asObservable();
  constructor() {
    this.fetchData();
  }

  fetchData() {
    this._products.next(getMock());
  }
}
